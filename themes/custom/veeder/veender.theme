<?php

/**
 * @file
 * Theming functions to support in the Veender Root theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function veender_preprocess_html(&$variables) {
  // Add information about the number of sidebars.
  // if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
  //   $variables['attributes']['class'][] = 'layout-two-sidebars';
  // }
  // elseif (!empty($variables['page']['sidebar_first'])) {
  //   $variables['attributes']['class'][] = 'layout-one-sidebar';
  //   $variables['attributes']['class'][] = 'layout-sidebar-first';
  // }
  // elseif (!empty($variables['page']['sidebar_second'])) {
  //   $variables['attributes']['class'][] = 'layout-one-sidebar';
  //   $variables['attributes']['class'][] = 'layout-sidebar-second';
  // }
  // else {
  //   $variables['attributes']['class'][] = 'layout-no-sidebars';
  // }

  // if (!empty($variables['page']['featured_top'])) {
  //   $variables['attributes']['class'][] = 'has-featured-top';
  // }

}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function veender_preprocess_page_title(&$variables) {
  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  // if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
  //   // Add a wrapper div using the title_prefix and title_suffix render
  //   // elements.
  //   $variables['title_prefix']['shortcut_wrapper'] = [
  //     '#markup' => '<div class="shortcut-wrapper clearfix">',
  //     '#weight' => 100,
  //   ];
  //   $variables['title_suffix']['shortcut_wrapper'] = [
  //     '#markup' => '</div>',
  //     '#weight' => -99,
  //   ];
  //   // Make sure the shortcut link is the first item in title_suffix.
  //   $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  // }
}

/**
 * Implements hook_preprocess_HOOK() for maintenance-page.html.twig.
 */
function veender_preprocess_maintenance_page(&$variables) {
  // By default, site_name is set to Drupal if no db connection is available
  // or during site installation. Setting site_name to an empty string makes
  // the site and update pages look cleaner.
  // @see template_preprocess_maintenance_page
  if (!$variables['db_is_active']) {
    $variables['site_name'] = '';
  }

  // Bartik has custom styling for the maintenance page.
  $variables['#attached']['library'][] = 'bartik/maintenance_page';
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function veender_preprocess_node(&$variables) {
  // Remove the "Add new comment" link on teasers or when the comment form is
  // displayed on the page.
  if ($variables['teaser'] || !empty($variables['content']['comments']['comment_form'])) {
    unset($variables['content']['links']['comment']['#links']['comment-add']);
  }

  // $node_type = $variables['node']->getType();
  // if ($node_type == 'generic_landing') {
  //   var_dump($variables['node']->get("field_generic_hero_plate_color")->value);
  // }
  // Add content class.
  //$variables['attributes']['class'][] = 'main-content';

  $node_type = $variables['node']->getType();
  switch ($node_type) {
    case 'generic_landing':
      // var_dump($variables['node']->field_generic_hero_vimeo[0]->value);
      // $variables['#attached']['library'][] = 'veender/facybox';
      break;
    default;
  }
}

/**
 * Implements hook_preprocess_HOOK() for region.html.twig.
 */
function veender_preprocess_region(&$variables) {
  $region = $variables['elements']['#region'];
  $variables['region'] = $variables['elements']['#region'];
  // Secondary menu region.
  if ($region == 'secondary_menu') {
    $variables['attributes']['class'][] = 'quick-nav';
  }
  if ($region == 'primary_menu') {
    $variables['attributes']['class'][] = 'main-nav';
  }
  if ($region == 'search_bar') {
    $variables['attributes']['class'][] = 'small-container';
  }
  if ($region == 'footer_first') {
    $variables['attributes']['class'][] = 'footer-left';
  }
  if ($region == 'footer_second') {
    $variables['attributes']['class'][] = 'single-link';
  }
  if ($region == 'footer_third') {
    $variables['attributes']['class'][] = 'footer-link';
  }
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function veender_preprocess_block(&$variables) {
  // Add a clearfix class to system branding blocks.
  if ($variables['plugin_id'] == 'system_menu_block:language-switcher') {
    $variables['attributes']['class'][] = 'language-dropdown';
  }

  if ($variables['plugin_id'] == 'search_form_block') {
    $variables['attributes']['class'][] = 'search-part';
  }

  if ($variables['plugin_id'] == 'system_menu_block:sidebar-menu') {
    $variables['attributes']['class'][] = 'side-bar';
  }

  
  // Trending block view.
  // if ($variables['plugin_id'] == 'views_block:trending_blogs-block_2') {
  //   $variables['attributes']['class'][] = 'single-link';
  // }

  // if ($variables['plugin_id'] == 'system_menu_block:footer-menu') {
  //   $variables['attributes']['class'][] = 'single-link';
  // }

  // if ($variables['plugin_id'] == 'system_menu_block:footer') {
  //   $variables['attributes']['class'][] = 'footer-link';
  // }
  //system_menu_block:main, system_menu_block:language-switcher, search_form_block
  //var_dump($variables['plugin_id']);
}


function veender_preprocess_paragraph(&$variables) {
  // Get is_front variable on paragraph.html.twig.
  $variables['is_front'] = Drupal::service('path.matcher')->isFrontPage();
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function veender_preprocess_field(&$variables, $hook) {
  $element = $variables['element'];
  if (isset($element['#field_name'])) {
    if ($element['#field_name'] == 'field_add_starting_point') {
      $variables['attributes']['class'][] = 'banner-point-part d-flex justify-content-center';
    }
    if ($element['#field_name'] == 'field_add_starting_point') {
      $delta = 0;
      while (!empty($element[$delta])) {
        $variables['items'][$delta ]['attributes']['class'] = 'item';
        $delta++;
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function veender_preprocess_menu(&$variables) {
  if ($variables['menu_name'] == 'header-top-menu') {
    $variables['attributes']['class'][] = 'secondary-menu';
  }
  if ($variables['menu_name'] == 'language-switcher') {
    $variables['attributes']['class'][] = 'select-list';
  }
  if ($variables['menu_name'] == 'footer') {
    $variables['attributes']['class'][] = 'privacy-part';
  }
  if ($variables['menu_name'] == 'sidebar-menu') {
    $variables['attributes']['class'][] = 'sidebar-links';
  }
}

/**
 * Implements hook_preprocess_HOOK() for breadcrumb.html.twig.
 */
function veender_preprocess_breadcrumb(&$variables) {
  if (($node = \Drupal::routeMatch()->getParameter('node')) && $variables['breadcrumb']) {
    if ($node->gettype() == 'generic_landing') {
      if ($node->field_display_breadcrumbs[0]->value == 1) {
        if (empty($node->field_generic_hero_image[0]->entity->uri->value) && empty($node->field_breadcrumb_color[0]->color)) {
          $variables['breadcrumb_class'] = 'breadcrumb_NoHero';
          $variables['breadcrumb_color'] = '#000';
        } elseif (!empty($node->field_breadcrumb_color[0]->color) && empty($node->field_generic_hero_image[0]->entity->uri->value)) {
          $variables['breadcrumb_color'] = '#000';
          $variables['breadcrumb_class'] = 'breadcrumb_NoHero';
          
        } elseif (!empty($node->field_generic_hero_image[0]->entity->uri->value) && empty($node->field_breadcrumb_color[0]->color)) {
          $variables['breadcrumb_color'] = '#000';
        } else {
          $variables['breadcrumb_color'] = $node->field_breadcrumb_color[0]->color;
        }
      }
      else {
        unset($variables['breadcrumb']);
      }
    }
    if ($node->gettype() == 'product_detail') {
      if ($node->field_display_breadcrumbs[0]->value == 1) {
        if (empty($node->field_generic_hero_image[0]->entity->uri->value) && empty($node->field_display_breadcrumbs_color[0]->color)) {
          $variables['breadcrumb_class'] = 'breadcrumb_NoHero';
          $variables['breadcrumb_color'] = '#000';
        } elseif (!empty($node->field_display_breadcrumbs_color[0]->color) && empty($node->field_generic_hero_image[0]->entity->uri->value)) {
          $variables['breadcrumb_color'] = '#000';
          $variables['breadcrumb_class'] = 'breadcrumb_NoHero';
          
        } elseif (!empty($node->field_generic_hero_image[0]->entity->uri->value) && empty($node->field_display_breadcrumbs_color[0]->color)) {
          $variables['breadcrumb_color'] = '#fff';
        } else {
          $variables['breadcrumb_color'] = $node->field_display_breadcrumbs_color[0]->color;
        }
      }
      else {
        unset($variables['breadcrumb']);
      }
    }
    // Get current page title.
    $request = \Drupal::request();
    $route_match = \Drupal::routeMatch();
    $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());
    
    if (!empty($page_title)) {
      $variables['breadcrumb'][] = [
        'text' => $page_title,
        'attributes' => new Attribute(['class' => ['active']])
      ];
    }
  }
}
/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function veender_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'search_block_form') {
    $suggestions[] = 'form__search_block_form';
  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function veender_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['search_block_form', 'search_form'])) {
    $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
    if (!isset($form[$key]['submit']['#attributes'])) {
      $form[$key]['submit']['#attributes'] = new Attribute();
    }
    $form[$key]['submit']['#attributes']->addClass('searchButton');
    $form['keys']['#attributes']['placeholder'][] = t('Search..');
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * Add class and change lable of the field for the contact us form.
 */
function veender_form_contact_message_feedback_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#attributes']['class'][] = 'form-grp';
  unset($form['langcode']);
  // First Name.
  $form['name']['#prefix'] = '<div class="inp-box half-box">';
  $form['name']['#suffix'] = '</div>';
  $form['name']['#title'] = t('First Name*');
  // Last Name.
  $form['field_last_name']['#attributes']['class'][] = 'inp-box half-box';
  $form['field_last_name']['widget'][0]['value']['#title'] = t('Last Name*');
  // Email.
  $form['mail']['#prefix'] = '<div class="inp-box half-box">';
  $form['mail']['#suffix'] = '</div>';
  $form['mail']['#title'] = t('Email*');
  // Phone.
  $form['field_phone_number']['#attributes']['class'][] = 'inp-box half-box';
  $form['field_phone_number']['widget'][0]['value']['#title'] = t('Phone Number');
  // Country.
  $form['field_country']['#attributes']['class'][] = 'inp-box half-box';
  $form['field_country']['widget'][0]['value']['#title'] = t('Country*');
  //Request Type*
  $form['field_request_type']['#attributes']['class'][] = 'inp-box half-box';
  $form['field_request_type']['widget'][0]['value']['#title'] = t('Request Type*');
  // Message.
  $form['message']['#attributes']['class'][] = 'inp-box half-box';
  $form['message']['widget'][0]['value']['#title'] = t('How may we help you?*');
}
