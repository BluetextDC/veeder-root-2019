{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'key-fea-sec',
    'space-small',
    'paragraph-' ~ paragraph.id(),
    'paragraph--' ~ paragraph.bundle|clean_class,
    view_mode ? paragraph.bundle|clean_class ~ '--' ~ view_mode|clean_class,
  ]
%}

{% set feature_data = content.field_features_cta_add_cta['#items'] | length %}
{% set feature_items = {} %}

{% for key, i in 0..feature_data - 1 %}
  {% set items = {
      title: content.field_features_cta_add_cta[i]['#paragraph'].field_feature_cta_heading.value,
      description: content.field_features_cta_add_cta[i]['#paragraph'].field_feature_cta_description.value,
      link_title: content.field_features_cta_add_cta[i]['#paragraph'].field_feature_cta_cta.value[0].title,
      link_url: content.field_features_cta_add_cta[i]['#paragraph'].field_feature_cta_cta[0].url,
      link_target: content.field_4_column_add_cta[i]['#paragraph'].field_feature_cta_cta.value[0].options.attributes.target,
      image_uri: content.field_features_cta_add_cta[i]['#paragraph'].field_feature_cta_image.entity.uri.value ? file_url(content.field_features_cta_add_cta[i]['#paragraph'].field_feature_cta_image.entity.uri.value) : '',
    }
  %}
  {% set feature_items = feature_items|merge({(key): items}) %}
{% endfor %}

{% block paragraph %}
  <section{{ attributes.addClass(classes) }} id="{{ content.field_features_cta_block_id.0 }}" style="background-color: {{ content.field_features_cta_block_color.0 }};">
    <div class="container">
      {% block content %}
        {% if content.field_features_cta_block_heading|render is not empty %}
          <div class="heading text-center">
            <h2 style="color: {{ content.field_features_cta_head_body_col.0 }};">{{ content.field_features_cta_block_heading.0 }}</h2>
          </div>
        {% endif %}
        <div class="features-list row justify-content-center">
          {% for feature_item in feature_items %}
            <div class="col-md-4 item">
              <div class="item-wrap bg-white">
                {% if feature_item.image_uri is not empty %}
                  <figure>
                    <img src="{{ feature_item.image_uri }}" alt="{{ feature_item.title }}">
                  </figure>
                {% endif %}
                <div class="desc line-top">
                  <h4 class="h6">{{ feature_item.title }}</h4>
                  {{ feature_item.description|raw }}
                  {% if feature_item.link_title|render is not empty %}
                    <a href="{{ feature_item.link_url }}" class="btn-link" {% if feature_item.link_target is not empty %}target="{{ feature_item.link_target }}"{% endif %}>{{ feature_item.link_title }}</a>
                  {% endif %}
                </div>
              </div>
            </div>
          {% endfor %}
        </div>
      {% endblock %}
    </div>
  </section>
{% endblock paragraph %}
