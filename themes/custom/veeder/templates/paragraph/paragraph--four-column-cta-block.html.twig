{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'space-small',
    'paragraph-' ~ paragraph.id(),
    'paragraph--' ~ paragraph.bundle|clean_class,
    view_mode ? paragraph.bundle|clean_class ~ '--' ~ view_mode|clean_class,
  ]
%}

{# Checking front page for making space between section #}
{% if is_front == true %}
  {% set classes = classes|merge(['about-sec']) %}
{% else %}
  {% set classes = classes|merge(['four-block-sec']) %}
{% endif %}

{% set column_data = content.field_4_column_add_cta['#items'] | length %}
{% set column_items = {} %}

{% for key, i in 0..column_data - 1 %}
  {% set items = {
      title:       content.field_4_column_add_cta[i]['#paragraph'].field_column_cta_heading.value,
      description: content.field_4_column_add_cta[i]['#paragraph'].field_column_cta_description.value,
      link_title:  content.field_4_column_add_cta[i]['#paragraph'].field_column_cta_cta.value[0].title,
      link_url:    content.field_4_column_add_cta[i]['#paragraph'].field_column_cta_cta[0].url,
      link_target: content.field_4_column_add_cta[i]['#paragraph'].field_column_cta_cta.value[0].options.attributes.target,
      image_uri:   content.field_4_column_add_cta[i]['#paragraph'].field_column_cta_image.entity.uri.value ? file_url(content.field_4_column_add_cta[i]['#paragraph'].field_column_cta_image.entity.uri.value) : '',
      vimeo_url:   content.field_4_column_add_cta[i]['#paragraph'].field_column_cta_vimeo_url[0].value,
      inline_play: content.field_4_column_add_cta[i]['#paragraph'].field_column_cta_inline_video[0].value,
    }
  %}
  {% set column_items = column_items|merge({(key): items}) %}
{% endfor %}

{% block paragraph %}
  <section{{ attributes.addClass(classes) }} id="{{ paragraph.field_4_column_cta_block_id.0.value|trim|replace(' ', '-') }}"{% if is_front != true %} style="background-color: {{ content.field_4_column_cta_block_color.0 }};"{% endif %}>
    {% block content %}
      <div class="container">
        <div{% if is_front == true %} class="four-block-sec space-large sec-top" style="background-color: {{ content.field_4_column_cta_block_color.0 }};"{% else %} class="four-column-inner-section"{% endif %}>
          {% if content.field_4_column_cta_block_heading|render is not empty %}
            <div class="heading text-center" style="color: {{ content.field_4_column_cta_block_head_co.0 }};">
              <h2 style="color: {{ content.field_4_column_cta_block_head_co.0 }};">{{ content.field_4_column_cta_block_heading.0 }}</h2>
            </div>
          {% endif %}
          <div class="block-list row">
            {% for j, column_item in column_items %}
              <div class="item col-md-3 col-6"  style="color: {{ content.field_4_column_cta_block_head_co.0 }};">
                <div class="cd-wrap">
                  {% if (column_item.inline_play == '0') and (column_item.vimeo_url is not empty) and (column_item.image_uri is empty) %}
                    <figure>
                      <a href="{{ column_item.vimeo_url }}" data-fancybox class="c-video" style="background: url({{ para_vimeo_thumb[j] }}) no-repeat center / cover">
                        <span class="play-icon ic-play-icon"></span>
                      </a>
                    </figure>
                  {% elseif (column_item.vimeo_url is not empty) and (column_item.inline_play == '1') and (column_item.image_uri is empty) %}
                    <figure>
                      <a href="javascript:;" class="c-video">
                        <iframe src="{{ column_item.vimeo_url }}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
                      </a>
                    </figure>
                  {% elseif column_item.image_uri is not empty %}
                    <figure>
                      {% if column_item.link_title|render is not empty %}
                        <a href="{{ column_item.link_url }}" class="clickable-image">
                          <img src="{{ column_item.image_uri }}" alt="{{ column_item.title }}">
                        </a>
                      {% else %}
                        <img src="{{ column_item.image_uri }}" alt="{{ column_item.title }}">
                      {% endif %}
                    </figure>
                  {% endif %}
                  <h6>{{ column_item.title }}</h6>
                  {{ column_item.description|raw }}
                </div>
                {% if column_item.link_title|render is not empty %}
                  <a href="{{ column_item.link_url }}"{% if content.field_4_column_cta_button_stylin.0["#markup"] == 1 %} class="btn four-column-cta-btn {% if (paragraph.field_4_column_cta_block_color.0.color == '#FFF') or (paragraph.field_4_column_cta_block_color.0.color == '#FFFFFF') %}btn-black{% endif %}"{% else %} class="btn-link four-column-cta-btn"{% endif %} {% if column_item.link_target is not empty %}target="{{ column_item.link_target }}"{% endif %}>{{ column_item.link_title }}</a>
                {% endif %}
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    {% endblock %}
  </section>
{% endblock paragraph %}
