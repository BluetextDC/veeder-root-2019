{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
{% if view_mode == 'featured_view' %}
  <div class="featured-blog d-flex flex-wrap align-items-center col-md-7 col-lg-8">
    {% if content.field_blog_detail_image.0|render is not empty %}
      <div class="img-part">
        <figure>
          {{ content.field_blog_detail_image.0 }}
        </figure>
      </div>
    {% endif %}
    <div class="text-part">
        <div class="line-title"><span class="hr-line"></span></div>
        {{ title_prefix }}
          {% if not page %}
            <h4{{ title_attributes }}>
              <a href="{{ url }}" rel="bookmark">{{ label }}</a>
            </h4>
          {% endif %}
        {{ title_suffix }}
        <p>{{ content.field_summary.0 }}</p>
        <a href="{{ url }}" class="btn-link" data-icon="c">{{ 'Read More'|trans }}</a>
    </div>
  </div>
{% elseif view_mode == 'teaser' %}
  <div class="item col-md-4">
      <div class="inner-item">
          <figure>
            {{ content.field_blog_detail_image.0 }}
          </figure>
          <div class="desc line-top">
              {{ title_prefix }}
                {% if not page %}
                  <h6{{ title_attributes }}>{{ label }}</h6>
                {% endif %}
              {{ title_suffix }}
              <span class="cat">{{ content.field_blog_tags.0 }}</span>
              <div class="date-show">{{ content.field_blog_date.0 }} | {{ content.field_blog_author.0 }}</div>
              <p>{{ content.field_summary.0 }}</p>
              <a href="{{ url }}" class="btn-link" data-icon="c">{{ 'Read More'|trans }}</a>
          </div>
      </div>
  </div>
{% else %}
  <div{{ attributes }}>

    {{ title_prefix }}
    {% if not page %}
      <h2{{ title_attributes }}>
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      </h2>
    {% endif %}
    {{ title_suffix }}

    <section class="hero-section{% if (content.field_blog_detail_image.0|render is empty) and (content.field_blog_detail_vimeo|render is empty) %} NoHero-sec{% endif %}">
      <div class="small-inner-banner{% if content.field_blog_detail_vimeo|render is not empty %} video-banner{% endif %}">
        <div class="banner-caption" style="background-color: {{ content.field_blog_detail_plate_color.0 }};">
          <div class="cap-wrap">
            <h1 style="color: #fff;">{{ content.field_blog_detail_heading.0 }}</h1>
            <div class="tag" style="color: #fff;"><span>{{ content.field_blog_author.0 }}</span><span>{{ content.field_blog_date.0 }}</span><span>{{ content.field_blog_tags.0 }},  {{ content.field_blog_tags.1 }}</span></div>
            {{ content.field_blog_social_share }}                                
          </div>
        </div>
        {% if (content.field_blog_detail_vimeo|render is not empty) %}
          <a href="{{ content.field_blog_detail_vimeo.0 }}" data-fancybox class="c-video bg-img"{% if content.field_blog_detail_image_parallax.0["#markup"] == 1 %} id="parallax"{% endif %} style="background: url({{ vimeo_thumb }}) no-repeat center / cover;">
            <span class="play-icon ic-play-icon"></span>
          </a>
        {% elseif content.field_blog_detail_image|render is not empty %}
          <div class="banner-img">
            <div class="bg-img"{% if content.field_blog_detail_image_parallax.0["#markup"] == 1 %} id="parallax"{% endif %} style="background: url({{ file_url(content.field_blog_detail_image['#items'].entity.uri.value) }}) no-repeat center / cover;">
            </div>
          </div>
        {% endif %}                     
      </div>
    </section>
    
    {# -- content area part -- #}
    <section class="side-sec-wrap space-small">
      <div class="container">                           
        <div class="inner-wrap d-flex flex-wrap">
          <div class="left-side-part">
            <div class="e-desc">
              {{ content.field_body.0|raw }}
            </div>
          </div>
          <div class="right-side-part">
            <div class="related-insight">
              <h4>{{ content.field_blog_related_heading.0 }}</h4>
              {{ content.field_blog_realted_view }}
            </div>
          </div>
        </div>
      </div>
    </section>

    <div class="main-content">
      {{ content.field_components }}

      {# Render other fields if client will create #}
      {{ content|without('field_blog_author', 'field_breadcrumb_color', 'field_components', 'field_display_breadcrumbs', 'field_display_contact_sidebar', 'field_blog_date', 'field_display_contact_footer', 'field_contact_footer_form', 'field_blog_detail_heading', 'field_blog_detail_image', 'field_blog_detail_plate_color', 'field_blog_detail_vimeo', 'field_blog_detail_image_parallax', 'field_blog_related_heading', 'field_blog_realted_view', 'field_summary', 'field_blog_tags', 'field_body', 'field_blog_social_share', 'field_blog_refer_weight', 'field_color_variation') }}

      {# Include template #}
      {% include directory ~ '/templates/parts/contact-footer.html.twig' %}
    </div>
  </div>
{% endif %}
